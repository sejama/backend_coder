>> Consigna: Utilizando Mongo Shell, crear una base de datos llamada ecommerce que contenga
dos colecciones: mensajes y productos.

use ecommerce

db.createCollection("productos")
db.createCollection("mensajes")

db
show collection

1) Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El
formato de los documentos debe estar en correspondencia con el que venimos utilizando en
el entregable con base de datos MariaDB.

2) Definir las claves de los documentos en relación a los campos de las tablas de esa base. En
el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos(eligiendo
valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990).

db.productos.insert([
{'title':'Producto 1', 'price':120, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 2', 'price':258, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 3', 'price':900, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 4', 'price':1280, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 5', 'price':1700, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 6', 'price':2300, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 7', 'price':2860, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 8', 'price':3350, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 9', 'price':4320, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'},
{'title':'Producto 10', 'price':4990, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'}
])

db.mensajes.insert([
{'correo': 'correo1@correo.com', 'mensaje': 'hola soy el mensaje 1', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo2@correo.com', 'mensaje': 'hola soy el mensaje 2', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo3@correo.com', 'mensaje': 'hola soy el mensaje 3', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo4@correo.com', 'mensaje': 'hola soy el mensaje 4', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo5@correo.com', 'mensaje': 'hola soy el mensaje 5', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo6@correo.com', 'mensaje': 'hola soy el mensaje 6', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo7@correo.com', 'mensaje': 'hola soy el mensaje 7', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo8@correo.com', 'mensaje': 'hola soy el mensaje 8', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo9@correo.com', 'mensaje': 'hola soy el mensaje 9', 'createdAt': '2022/11/10 15:30:00'},
{'correo': 'correo10@correo.com', 'mensaje': 'hola soy el mensaje 10', 'createdAt': '2022/11/10 15:30:00'}
])

3) Listar todos los documentos en cada colección.
db.productos.find({})
db.mensajes.find({})

4) Mostrar la cantidad de documentos almacenados en cada una de ellas.
db.productos.count()
db.mensajes.count()

db.productos.estimatedDocumentCount()
db.mensajes.estimatedDocumentCount()

db.productos.countDocuments({})
db.mensajes.countDocuments({})

5) Realizar un CRUD sobre la colección de productos:
    a) Agregar un producto más en la colección de productos
    db.productos.insertOne({'title':'Producto 11', 'price':4995, 'thumbnail':'https://1drv.ms/u/s!AoUMMVTFg46tnP86c7sV3t5n8jYOrg?e=LOhY3J'})
    
    b) Realizar una consulta por nombre de producto específico:
        i) Listar los productos con precio menor a 1000 pesos.
        db.productos.find({'price': {$lt: 1000}})

        ii) Listar los productos con precio entre los 1000 a 3000 pesos.
        db.productos.find({$and: [
            {'price': {$gte: 1000}},
            {'price': {$lte: 3000}}
        ]})

        iii) Listar los productos con precio mayor a 3000 pesos.
        db.productos.find({"price": {$gte: 3000}})

        iv) Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
        db.productos.find({},{"title":1}).skip(2).limit(1).sort({_id:1})
    
    c) Hacer una actualización sobre todos los productos, agregando el campo stock a todos
ellos con un valor de 100.
     db.productos.updateMany({},{$set: {'stock': 100}})
    
    d) Cambiar el stock a cero de los productos con precios mayores a 4000 pesos.
    db.productos.updateMany({'price': {$gt: 4000}},{$set: {'stock': 0}})

    e) Borrar los productos con precio menor a 1000 pesos
    db.productos.deleteMany({'price': {$lt: 1000}})

6) Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce.
Verificar que pepe no pueda cambiar la información.

db.createUser(
  {
    user: "pepe",
    pwd:  "asd456",
    roles: [ { role: "read", db: "ecommerce" } ]
  }
)
